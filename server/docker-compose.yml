version: '3.3'

services:
  pupcket-server:
    container_name: pupcket-server
    build:
      context: ./server
    image: leesunro/pupcket:temp
    environment:
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - DB_SERVER=${DB_SERVER}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - SSL_PASSWORD=${SSL_PASSWORD}
    ports:
      - "8080:8080"
    networks:
      - backbone

  pupcket-nginx:
    container_name: pupcket-nginx
    image: nginx
    restart: always
    volumes:
      - ./dev/nginx:/etc/nginx/conf.d
      - /letsencrypt/certbot/conf:/etc/letsencrypt
      - /letsencrypt/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - pupcket-server
    networks:
      - backbone
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /letsencrypt/certbot/conf:/etc/letsencrypt
      - /letsencrypt/certbot/www:/var/www/certbot
    depends_on:
      - pupcket-nginx
    networks:
      - backbone
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  backbone:
    driver: bridge
